### ###
### ###
### ### Default mark2.properties settings
### ### This file should NOT be edited
### ###
### ###
### ### If you wish to upgrade mark2 in the future, 
### ### your changes may conflict with git's. DO NOT remove this file.
### ###
### ###
### ### If you wish to edit this file, it's recommended that you create a copy
### ### and place it in the appropriate working directory.
### ### Example: /home/username/servers/server_name/mark2.properties
### ###          /srv/server_name/mark2.properties
### ###
### ###

###
### This file defines the configuration that all your servers share. You can do fine-
### tuning on a server-by-server basic by dropping a file called 'mark2.properties'
### in the same directory as your 'minecraft_server.jar'. There's an example in the
### 'samples' directory.
###

###
### mark2 options
###

# Semicolon-separated list of jar file patterns to try
# If you're running a Feed The Beast server you probably want something like FTB-*.jar
mark2.jar-path=craftbukkit*.jar;minecraft_server*.jar;spigot*.jar

# How long to wait for the server to shut down after issuing `stop` before we kill it.
mark2.shutdown-timeout=60

# How to rotate the mark2 log. Should be either 'off', 'size', or 'daily'
mark2.log.rotate-mode=size
# If mode is 'size', this specifies the max log filesize before rotation
mark2.log.rotate-size=1000000
# The number of logs to keep before clearing old ones. Blank to never clear.
mark2.log.rotate-limit=10
# The number of lines to keep in the scrollback history upon detaching from console.
#  Setting a value too high may cause sluggishness when switching between consoles.
mark2.scrollback.length=200

# Time translations
mark2.time.second=second
mark2.time.minute=minute
mark2.time.hour=hour
mark2.time.day=day
mark2.time.week=week
# The s in hours
mark2.time.plurals=s

# This determines the octal mask of mark2's log, pid, and socket files
# By default any user with an account on the system can control and attach to servers
# If you're on shared hosting you probably want to change these to 600.
mark2.umask.log=666
mark2.umask.pid=666
mark2.umask.sock=666

# Regular expressions to match for player join, quit and chat events
# These use python regex syntax: http://docs.python.org/library/re.html
# Backslashes *must* be doubled or they will be stripped.
mark2.regex.join=(?P<username>[A-Za-z0-9_]{1,16}).*\\[\/(?P<ip>[0-9.:%]*)\\] logged in with entity id .+
mark2.regex.quit=(?P<username>[A-Za-z0-9_]{1,16}) lost connection: (?P<reason>.+)
mark2.regex.chat=<(?P<username>[A-Za-z0-9_]{1,16})> (?P<message>.+)

###
### mark2 services
###

# Ping: periodically connect to the server and send a 'Server List Ping'
# This determines whether the server is connectable, and also gives a player count.
# This will normally appear as end of stream/lost connection messages from the localhost connection if it isn't 
# successfully culled from the log file.
# You should not disable this service without good reason.
mark2.service.ping.enabled=true
mark2.service.ping.interval=5

# Process: Basic detection settings to initialize the mark2 plugin system.
# The "Done" message tells the back end mark2 system to start the plugin system. 
# The "Stop" command is the command ran to stop the server by both the shutdown plugin and the backend server_stop event.
mark2.service.process.done-pattern=Done \\(([0-9\\.,]+)s\\)\\!.*
mark2.service.process.stop-cmd=stop\n

# Command Options:
# Java Path that is used to start the server.
# You should not edit this line without good reason.
mark2.service.process.java-path=java
# Command Line Arguments that are given to the server jar.
# nogui is not required since it's included in the command automatically.
# *Important*: some arguments might not be compatible with mark2
# http://wiki.bukkit.org/CraftBukkit_Command_Line_Arguments
# Example: mark2.service.process.server-args=--max-players 36 --world map_name
mark2.service.process.server-args=

# Console tracking: service that handles console messages to trigger player events
# Lang file path: Path to a .json or .lang file containing the messages for minecraft stuff (and in mark2's case, the death messages)
mark2.service.console_tracking.lang_file_path=

###
### JVM options
###

# How often to poll the process for cpu and memory usage (seconds).
java.ps.interval=5

# Memory allocation pool initial size
#java.cli.X.ms=512M

# Memory allocation pool max size
java.cli.X.mx=512M

# Strip terminal colours
java.cli.D.jline.terminal=jline.UnsupportedTerminal

# Possible speed-ups - use only if you know what you're doing
# Reference: http://goo.gl/XuYv7
# Guide:     http://goo.gl/D8P9b

#java.cli.X.incgc=
#java.cli.XX.AggressiveOpts=true
#java.cli.XX.CMSIncrementalPacing=true
#java.cli.XX.CompileThreshold=1500
#java.cli.XX.MaxGCPauseMillis=20
#java.cli.XX.MaxPermSize=128M
#java.cli.XX.MaxTenuringThreshold=15
#java.cli.XX.OptimizeStringConcat=true
#java.cli.XX.ParallelGCThreads=2
#java.cli.XX.PermSize=128M
#java.cli.XX.TargetSurvivorRatio=90
#java.cli.XX.ThreadPriorityPolicy=42
#java.cli.XX.TieredCompilation=true
#java.cli.XX.UnlockExperimentalVMOptions=true
#java.cli.XX.UseAdaptiveGCBoundary=true
#java.cli.XX.UseCompressedOops=true
#java.cli.XX.UseConcMarkSweepGC=true
#java.cli.XX.UseFastAccessorMethods=true
#java.cli.XX.UseG1GC=true
#java.cli.XX.UseGCOverheadLimit=true
#java.cli.XX.UseLargePages=true
#java.cli.XX.UseParNewGC=true
#java.cli.XX.UseSSE=3
#java.cli.XX.UseStringCache=true
#java.cli.XX.UseThreadPriorities=true

# Extra java arguments prepended before all others
java.cli_prepend=

# Extra java arguments appended after all others
java.cli_extra=

###
### Plugins
###


###
# ALERT
# Prints messages on an interval
# Each line of your alerts.txt file should be a message to say
plugin.alert.enabled=false
plugin.alert.path=alerts.txt
plugin.alert.interval=200
plugin.alert.command=say {message}

# Minimum number of players online that are required for alerts to show up 
plugin.alert.min-pcount=0


###
# BACKUP
# Compresses the world folders to a .tar.gz
# Provides ~backup command
plugin.backup.enabled=true
plugin.backup.path=backups/{timestamp}.tar.gz

# mode
#   include: back up only the paths in 'spec'
#   exclude: back up everything in the server directory except the paths in 'spec
plugin.backup.mode=include

# Semicolon separated paths to include or exclude, depending on mode
plugin.backup.spec=world*

# Flags to pass to `tar`
plugin.backup.tar-flags=-hpczf

# How long to wait after issuing `save-off` for minecraft to finish writing chunks (seconds)
plugin.backup.flush-wait=5


###
# DISCORD
# Sends server events to a discord webhook
plugin.discord.enabled=false

# Events to listen to
plugin.discord.server_started_enabled=true
plugin.discord.server_starting_enabled=false
plugin.discord.server_stopped_enabled=true
plugin.discord.server_stopping_enabled=false

# The webhook url for the channel you want server events to be posted in.
plugin.discord.webhook_url=
# The name to use as the webhook author
plugin.discord.webhook_name=mark2
# Server name for the webhook to use
plugin.discord.server_name=


###
# IRC
# relay in-game chat to IRC and visa-versa
plugin.irc.enabled=false

# Connection
plugin.irc.host=
plugin.irc.port=
plugin.irc.ssl=false
plugin.irc.server-password=
plugin.irc.channel=
plugin.irc.key=

# SSL options
#   certificate, if specified, should be the path to a PEM format file to use as our SSL client certificate.
#   if server-fingerprint is not blank and the server's certificate fingerprint does not match it, the relay will
#   refuse to connect.
#   either can be safely left blank, but if you know your server's fingerprint, you *should* put it here to
#   increase security.
plugin.irc.certificate=
plugin.irc.server-fingerprint=
#plugin.irc.certificate=~/relay_bot.pem
#plugin.irc.server-fingerprint=03:B8:D3:4D:5A:0C:B1:D8:5A:39:29:8B:BA:39:62:13:76:A4:79:93

# User
plugin.irc.nickname=RelayBot
plugin.irc.realname=mark2 IRC relay
plugin.irc.ident=RelayBot

# Services login
plugin.irc.username=
plugin.irc.password=

# If true, this replaces the first character of in-game usernames with an underscore to prevent highlighting
plugin.irc.cancel-highlight=false
plugin.irc.cancel-highlight-str=_

# Game -> IRC settings

# Whether to right-align usernames into a column. If you do, everything left of the first comma is right-aligned and
# the comma is stripped
plugin.irc.game-columns=true

# Server status (stopping/starting)
plugin.irc.game-status-enabled=true
plugin.irc.game-status-format=!, | server {what}.

# Server messages (/say)
plugin.irc.game-server-message-enabled=true
plugin.irc.game-server-message-format=#server, | {message}

plugin.irc.game-chat-enabled=true
plugin.irc.game-chat-format={username}, | {message}
# If this is a regex, chat messages that match it won't be relayed.
# To not relay messages with "P " in front of them, you'd use: ^P  (yes, there's a space after the P.)
plugin.irc.game-chat-private=

plugin.irc.game-join-enabled=true
plugin.irc.game-join-format=*, | --> {username}

plugin.irc.game-quit-enabled=true
plugin.irc.game-quit-format=*, | <-- {username}

plugin.irc.game-death-enabled=true
plugin.irc.game-death-format=*, | {text}

# /me (bukkit only)
plugin.irc.game-me-enabled=true
plugin.irc.game-me-format=*, | {username} {message}

# IRC -> Game settings

plugin.irc.irc-chat-enabled=true
plugin.irc.irc-chat-command=say [IRC] <{nickname}> {message}
plugin.irc.irc-action-command=say [IRC] * {nickname} {message}

# If set, this is the minimum channel status required to have your messages relayed.
# this can be a name, like 'op' or 'voice', or a channel mode like 'o' or 'v', or a status prefix
# like '@' or '+'
plugin.irc.irc-chat-status=

# Server commands from IRC
# if you enable this, sending "!say hi" will run "say hi" from the server console.
# status is the channel status required to have access, see irc-chat-status
# (although it must be set in order to enable the feature, unlike chat)
# irc-command-allow is a comma-separated list of permitted commands, or *
# if irc-command-mark2=true, (prefix)~ will execute a mark2 command (it'll
# still need to be allowed in -allow)
plugin.irc.irc-command-prefix=!
plugin.irc.irc-command-status=
plugin.irc.irc-command-allow=
plugin.irc.irc-command-mark2=false

# "!players" from IRC
plugin.irc.irc-players-enabled=true
plugin.irc.irc-players-format=Players currently in game: {players}


###
# LOG
# Exports server.log to a directory
plugin.log.enabled=true
plugin.log.gzip=true
plugin.log.path=logs/server-{timestamp}-{status}.log.gz

# Whether to log to the default server.log format
plugin.log.vanilla=false


###
# MCBOUNCER
# Simple mcbouncer plugin for vanilla servers
plugin.mcbouncer.enabled=false
plugin.mcbouncer.api-key=
plugin.mcbouncer.reason=Banned by an operator

# Proxy mode: don't report IPs or check IP bans
plugin.mcbouncer.proxy-mode=false


###
# MONITOR
# Restarts the server if it crashes and sends out an alert (see the PUSH plugin)
# Timeouts are given in minutes.
# If the '-warn' settings are greater than 0, alerts will be sent when the check
# has been failing for that many minutes. You may set '-timeout' to 0 to send alerts
# but never restart the server.
plugin.monitor.enabled=true

# Checks the server console is still accepting commands
# *IF* you have a custom unknown-command message in your spigot.yml file, edit it below.
plugin.monitor.crash-enabled=true
plugin.monitor.crash-timeout=1
plugin.monitor.crash-warn=0
plugin.monitor.crash-unknown-cmd-message=Unknown.*command.*
plugin.monitor.crash-check-command=/~mark2CrashCheck~
plugin.monitor.crash-check-command-message=.*/~mark2CrashCheck~.*

# Periodically make sure the server is still accepting connections
plugin.monitor.ping-enabled=true
plugin.monitor.ping-timeout=1
plugin.monitor.ping-warn=0

# *IF* you run a big server where having 0 players for an extended period means there's something wrong, enable this.
plugin.monitor.pcount-enabled=false
plugin.monitor.pcount-timeout=10
plugin.monitor.pcount-warn=0

# Restarts the server if it runs out of memory
plugin.monitor.oom-enabled=true

# Restarts the server if it detects the generic crash report message
# "This crash report has been saved to..."
plugin.monitor.crash-report-enabled=true


###
# MUMBLE
# Provides a user count/details to a user when they say something like !mumble
plugin.mumble.enabled=false
plugin.mumble.host=
plugin.mumble.port=64738
plugin.mumble.timeout=10
plugin.mumble.trigger=!mumble
plugin.mumble.command-up=\
    msg {username} host: {host}\n\
    msg {username} port: {port}\n\
    msg {username} status: up! users: {users_current}/{users_max}

plugin.mumble.command-down=\
    msg {username} host: {host}\n\
    msg {username} port: {port}\n\
    msg {username} status: down.


###
# PUSH
# Send you notifications if something happens to the server.

plugin.push.enabled=false

# If you want to send email from an address that uses authentication, fill in the SMTP settings below

#
# SMTP e-mail Settings

# Sender e-mail address
plugin.push.email-address=mark2@fantastic.minecraft.server
# SMTP hostname
plugin.push.email-smtp-server=
# SMTP username
plugin.push.email-smtp-user=
# SMTP password
plugin.push.email-smtp-password=
# Use SSL - true/false
plugin.push.email-smtp-security=

# If you want to use Pushover to receive notifications, fill in the Pushover token below

#
# Pushover App Token - Required for Pushover App service.

plugin.push.pushover-token=

#
# Endpoints

# available endpoints you can use for this setting:
#
#  NotifyMyAndroid: https://www.notifymyandroid.com/
#    nma:<nma-key>
#
#  Prowl:           http://www.prowlapp.com/
#    prowl:<prowl-key>
#
#  Pushover:        https://pushover.net/
#    pushover:<pushover-key>
#    -OR-
#    pushover:<pushover-key> device=<device-name>
#
#  SMTP:            Normal email & Text Messages
#    smtp:<receiver-email-address>
#    -OR-
#    smtp:<10-digit-mobile-number>@<carrier-sms-gateway>

# Filters

# all endpoints support an additional causes= setting, which
# filters what kinds of notification you will receive. for example:
#   SMTP:<receiver-email-address> causes=<error type>

# Examples:

# Sending to just one service

#plugin.push.endpoints=nma:<nma-key>

# Sending to multiple services and emails

#plugin.push.endpoints=\
#	nma:<nma-key>\n\
#	prowl:<prowl-key>\n\
#	pushover:<pushover-key> device=<device-name>\n\
#	pushover:<pushover-key> device=<second-device-name>\n\
#	smtp:<admin-email-address> causes=server/error/\n\
#	smtp:<second-admin-email-address> causes=*
#	smtp:<10-digit-mobile-number>@<carrier-sms-gateway> causes=server/error/

plugin.push.endpoints=


###
# REDIS
# Send certain events to a redis pubsub
plugin.redis.enabled=false
plugin.redis.host=localhost
plugin.redis.port=6379
plugin.redis.channel=mark2-{server}
plugin.redis.relay-events=StatPlayers,PlayerJoin,PlayerQuit,PlayerChat,PlayerDeath


###
# RSS
# Announce new RSS entries in-game
# Automatically shortens to redd.it links where possible
plugin.rss.enabled=false
plugin.rss.url=
plugin.rss.check-interval=60
plugin.rss.command=say {link} - {title}


###
# SAVE
# Provides ~save command
plugin.save.enabled=true
plugin.save.warn-message=WARNING: saving map in {delay}.
plugin.save.message=MAP IS SAVING.
plugin.save.warn-command=say %s
plugin.save.save-command=save-all


###
# SCRIPT
# Run a program or command on a given event or interval.
# See samples/scripts.txt
plugin.script.enabled=true
plugin.script.path=scripts.txt
plugin.script.shell=/bin/bash


###
# SHUTDOWN
# Cleanly stop/restart the server
# Provides ~stop, ~kill, ~restart, ~restart-kill commands
plugin.shutdown.enabled=true
plugin.shutdown.stop-warn-message=WARNING: server going down for planned maintenance in {delay}.
plugin.shutdown.stop-message=Server going down for maintenance.
plugin.shutdown.stop-cancel-message=WARNING: planned maintenance cancelled.
plugin.shutdown.stop-cancel-reason=WARNING: planned maintenance cancelled ({reason}).
plugin.shutdown.restart-warn-message=WARNING: planned restart in {delay}.
plugin.shutdown.restart-message=Server restarting.
plugin.shutdown.restart-cancel-message=WARNING: planned restart cancelled.
plugin.shutdown.restart-cancel-reason=WARNING: planned restart cancelled ({reason}).

# If you have a /kickall command, add it here (delete {player}) and change the mode to "once"
plugin.shutdown.kick-command=kick {player} {message}
plugin.shutdown.kick-mode=all
# If you have a custom shutdown alert command, add it here.
plugin.shutdown.alert-command=say %s


###
# TRIGGER
# Each line of triggers.txt should be of the format 'trigger,response'
# See samples/triggers.txt
plugin.trigger.enabled=true
plugin.trigger.path=triggers.txt
plugin.trigger.command=msg {user} {message}
